name: 'Terraform Plan'
description: "terraform plan for GCP"
inputs:
  gcp_key:
    description: GCP key of a service account that has at least read permissions to the resources managed by the terraform files
    required: true
  base64_terraform_project_id:
    description: Base64 encoded GCP project id of the folder's terraform state project
    required: true
  base64_domain_project_id:
    description: Base64 encoded GCP project id of the stack's domain
    required: true
  secrets_provisioning_private_key:
    description: Private key for a GitHub App that can provision repo-environments and secrets
    required: true
  additional_plan_args:
    description: Additional arguments to add to the `terraform plan` step. Use this to specify tfvar files, for example
    required: false
    default: ""
  tf_working_dir:
    description: Path to directory where terraform commands should be run
    required: false
    default: "./"
outputs:
  plan_file_path:
    description: Path of the plan file generated by `terraform plan`. Use this in the terraform apply step to apply this exact plan (fails if anything is different than when the plan ran)
    value: steps.plan.outputs.plan_file_path
runs:
  using: "composite"
  steps:
    - name: Checkout
      uses: actions/checkout@master
    - name: Login to GCP
      uses: google-github-actions/setup-gcloud@master
      with:
        version: '344.0.0'
        service_account_key: ${{ inputs.gcp_key }}
        export_default_credentials: true
    - name: Set up Terraform cli
      uses: hashicorp/setup-terraform@v1
    - name: Generate backend config
      working-directory: ${{ inputs.tf_working_dir }}
      shell: bash
      run: |
        echo 'bucket = "$(echo -n ${{ inputs.base64_terraform_project_id }} | base64 -d)-state"' > backend.hcl
        echo 'prefix = "${{ github.event.repository.name }}"' >> backend.hcl
    - name: TF init
      working-directory: ${{ inputs.tf_working_dir }}
      shell: bash
      run: terraform init -input=false -backend-config=./backend.hcl
    - name: TF plan (verbose)
      working-directory: ${{ inputs.tf_working_dir }}
      id: plan
      shell: bash
      run: |
        export TF_VAR_domain_project_id=$(echo -n ${{ inputs.base64_domain_project_id }} | base64 -d)
        export TF_VAR_terraform_project_id=$(echo -n ${{ inputs.base64_terraform_project_id }} | base64 -d)
        terraform plan -input=false -out=planfile ${{ inputs.additional_plan_args }}
        echo "::set-output name=plan_file_path::$(echo planfile)"
      env:
        TF_VAR_secrets_provisioning_private_key: ${{ inputs.secrets_provisioning_private_key }}
    - name: TF plan (concise)
      working-directory: ${{ inputs.tf_working_dir }}
      shell: bash
      run: terraform show planfile
      env:
        TF_LOG: WARN
    - name: TF plan (summary)
      working-directory: ${{ inputs.tf_working_dir }}
      shell: bash
      run: terraform show planfile | grep -E '(^.{4}  [#] .*|^[[:punct:]]|Plan)'
      env:
        TF_LOG: WARN
